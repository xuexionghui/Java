总到来说，Feign的源码实现的过程如下：

 首先通过@EnableFeignCleints注解开启FeignCleint
 根据Feign的规则实现接口，并加@FeignCleint注解
 程序启动后，会进行包扫描，扫描所有的@ FeignCleint的注解的类，并将这些信息注入到ioc容器中。
 当接口的方法被调用，通过jdk的代理，来生成具体的RequesTemplate
 RequesTemplate在生成Request
 Request交给Client去处理，其中Client可以是HttpUrlConnection、HttpClient也可以是Okhttp
 最后Client被封装到LoadBalanceClient类，这个类结合类Ribbon做到了负载均衡。


  /**
     * 这里有两个坑需要注意：
     *
     * 1、这里需要设置请求的方式为 RequestMapping 注解，用 GetMapping 注解是运行不成功的，即 GetMapping 不支持。
     *
     * 2、注解 PathVariable 里面需要填充变量的名字，不然也是运行不成功的。
     *
     * @param id
     * @return
     */
    @RequestMapping(value = "/simple/{id}", method = RequestMethod.GET)
    public User findById(@PathVariable("id") Long id);



 /**
     * 这里也有一个坑需要注意：
     *
     * 如果入参是一个对象的话，那么这个方法在 feign 里面默认为 POST 方法，就算你写成 GET 方式也无济于事。
     *
     * @param user
     * @return
     */
    @RequestMapping(value = "/user", method = RequestMethod.POST)
    public User postUser(@RequestBody User user);
}

